openapi: 3.0.3
info:
  title: 'Cash Advisor'
  version: '1.0'
  description: 'Мобильное приложение по учету финансов'

tags:
  - name: Auth
    description: Регистрация и авторизация
  - name: User
    description: Управление профилем пользователя 
  - name: Analytics
    description: Аналитика
  - name: Tracker
    description: Финансовый трекер
  - name: App
    description: Управление настройками


paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Регистрация пользователя
      description: Регистрация пользователя
      operationId: createUser
      parameters: []
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseOnCreate'
          description: 'Ок'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ValidationServerError'
  /auth/confirm:
    post:
      tags:
        - Auth 
      summary: Подтверждение электронной почты
      description: Объект с кодом подтверждения регистрации
      operationId: confirmEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfirm'
      responses:
        '200':
          description: 'Ок'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ValidationServerError'
  /auth/token:
    post:
      tags:
        - Auth 
      summary: Получение токена авторизации
      description: Объект с учетными данными пользователя
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: 'Ок'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ValidationServerError'
  /auth/restore:
    post:
      tags:
        - Auth 
      summary: Восстановление пароля
      description: Объект с почтой пользователя
      operationId: restorePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRestorePassword'
      responses:
        '200':
          description: 'Ок'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ValidationServerError'
  /auth/change:
    post:
      tags:
        - Auth 
      summary: Смена пароля
      description: Объект с токеном и новым паролем пользователя
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestChangePassword'
      responses:
        '200':
          description: 'Ок'
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ValidationServerError'

components:
  responses:
    ValidationError:
      description: 'Bad request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    
    ValidationServerError:
      description: 'Server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationServerError'        
            

  schemas:
  # -------------Авторизация------------------------------
    
    UserCreate:
      description: 'Создание пользователя'
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 50
          description: "Адрес электронной почты"
          example: "illbeback@yandex.ru"
        password:
          type: string
          maxLength: 50
          description: "Пароль"
          example: "Qwerty123"
      required:
        - email
        - password
        
    UserConfirm:
      description: 'Подтверждение почты'
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 1  
        code:
          type: integer
          format: int64
          example: 1111 
          nullable: true
      required:
        - userId
        - code
    UserLogin:
      description: 'Получение токена'
      type: object
      properties:
        email:
          type: string
          format: email
          example: "illbeback@yandex.ru" 
          nullable: true
        password:
          type: string
          example: "Qwerty123" 
          nullable: true
      required:
        - email
        - password
    
    RequestRestorePassword:
      description: 'Восстановление пароля'
      type: object
      properties:
        email:
          type: string
          format: email
          example: "illbeback@yandex.ru" 
          nullable: true
      required:
        - email
    
    RequestChangePassword:
      description: 'Восстановление пароля'
      type: object
      properties:
        token:
          type: string
          nullable: true
        password:
          type: string
          example: "Qwerty123"
          nullable: true

    UserResponseOnCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 50
          description: "Адрес электронной почты"
          example: "illbeback@yandex.ru"
        #hashed_password:
        #  type: string
        #  maxLength: 150
        #  description: "Фамилия"
        #  example: "Пупкин"
        name:
          type: string
          maxLength: 50
          description: "Имя"
          example: "" 
  
 
    ValidationError:
      description: Bad request
      type: object
      properties:
        error:
          description: 'Описание ошибки'
          type: string
            
    ValidationServerError:
      description: Server error
      type: object
      properties:
        error:
          description: 'Описание ошибки сервера'
          type: string

#securitySchemes:
#  BearerAuth:
#    description: 'Авторизация по токену.<br>
#      Все запросы от имени пользователя должны выполняться с заголовком<br>
#      "Authorization: Bearer TOKENVALUE"'
#    type: http
#    scheme: bearer
#    bearerFormat: JWT
